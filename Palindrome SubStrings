//C++ CODE
class Solution {
  public:
    int palinCount(int left,int right,string &s){
        int count=0;
        while(left>=0 && right<s.size()){
            if(s[left]==s[right]){
                count++;
                left--;
                right++;
            }
            else break;
        }
        return count;
    }
    int countPS(string &s) {
        // CodeGenius
        int n=s.size();
        int count=0;
        //odd
        for(int i=0;i<n;i++){
            count+=palinCount(i-1,i+1,s);
        }
        //even
        for(int i=1;i<n;i++){
            count+=palinCount(i-1,i,s);
        }
        return count;
    }
};
// JAVA CODE
class Solution {
    public int countPS(String s) {
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            count += expandAroundCenter(s, i, i);
            count += expandAroundCenter(s, i, i + 1);
        }
        return count;
    }
    public int expandAroundCenter(String s, int left, int right) {
        int count = 0;
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            if (right - left + 1 >= 2) {
                count++;
            }
            left--;
            right++;
        }
        return count;
    }
}
