//C++ CODE
class Solution {
  public:
    string maxSubseq(string& s, int k) {
        // CodeGenius
        string ans="";
        for(int i=0;i<s.size();i++){
            while(!ans.empty() && ans.back()<s[i] && k>0){
                ans.pop_back();
                k--;
            }
            ans.push_back(s[i]);
        }
        while(k>0){
            ans.pop_back();
            k--;
        }
        return ans;
    }
};
//JAVA CODE
class Solution {
    public static String maxSubseq(String s, int k) {
        int n = s.length();
        int toRemove = k;
        StringBuilder res = new StringBuilder();

        for (int i = 0; i < n; i++) {
            while (res.length() > 0 && toRemove > 0 &&
                   res.charAt(res.length() - 1) < s.charAt(i)) {
                res.deleteCharAt(res.length() - 1);
                toRemove--;
            }
            res.append(s.charAt(i));
        }
        return res.substring(0, n - k);
    }
}
