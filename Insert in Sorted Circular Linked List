//C++ CODE
class Solution {
  public:
    Node* sortedInsert(Node* head, int data) {
        //CodeGenius
        Node *NN=new Node(data),*temp=head;
        
        //case 1;
        if(head->data>data){
            NN->next=head;
            while(temp->next != head) temp=temp->next;
            temp->next=NN;
            return NN;
        }
        //case 2;
        while(temp->next!=head && temp->next->data <=data) temp=temp->next;
        NN->next=temp->next;
        temp->next=NN;
        return head;
    }
};
//JAVA CODE
class Solution {
    public Node sortedInsert(Node head, int data) {
        // code here
        Node prev = null;
        Node node = head;
        
        do {
            prev = node;
            node = node.next;
        } while(node != head);
        
        
        while(node.data < data) {
            node = node.next;
            prev = prev.next;
            if(node == head) {
                break;
            }
        }
        
        Node newNode = new Node(data);
        prev.next = newNode;
        newNode.next = node;
        
        if(head.data > data) {
            return newNode;
        } else {
            return head;
        }
    }
}
