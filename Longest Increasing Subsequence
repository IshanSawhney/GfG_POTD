//C++ CODE
class Solution {
  public:
    int lis(vector<int>& arr) {
        //CodeGenius
        vector<int>ans;
        ans.push_back(arr[0]);
        for(int i=1;i<arr.size();i++){
            if(arr[i]>ans.back()) ans.push_back(arr[i]);
            else{
                int idx=lower_bound(ans.begin(),ans.end(),arr[i])-ans.begin();
                ans[idx]=arr[i];
            }
        }
        return ans.size();
    }
};
//JAVA CODE
class Solution {
    static int lis(int arr[]) {
        int n = arr.length;
        List<Integer> ans = new ArrayList<>();
        ans.add(arr[0]);
        for (int i = 1; i < n; i++) {
            if (arr[i] > ans.get(ans.size() - 1)) {
                ans.add(arr[i]);
            } else {
                int low = Collections.binarySearch(ans, arr[i]);
                if (low < 0) {
                    low = -(low + 1);
                }
                ans.set(low, arr[i]);
            }
        }
        return ans.size();
    }
}
