//C++ CODE
class Solution {
  public:
    int startStation(vector<int> &gas, vector<int> &cost) {
        // CodeGenius
        int total=0;
        int req=0;
        for(int i=0;i<cost.size();i++){
            req+=cost[i];
            total+=gas[i];
        }
        if(total < req) return -1;
        int ans=0;
        int currgas=0;
        for(int i=0;i<gas.size();i++){
            currgas+=gas[i]-cost[i];
            if(currgas<0) {
                ans=i+1;
                currgas=0;
            }
        }
        return ans;
    }
};
//JAVA CODE
class Solution {
    public int startStation(int[] gas, int[] cost) {
        // Your code here
        int n = gas.length;
        
        int sum = 0;
        int start = 0;
        for(int i=0; i<2*n; i++){
            int ind = i%n;
            sum+=(gas[ind]-cost[ind]);
            if(sum<0){
                sum = 0;
                start = i+1;
            }
            if(i-start==n){
                return start;
            }
        }
        return -1;
    }
}
