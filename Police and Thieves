//C++ CODE
class Solution {
  public:
    int catchThieves(vector<char> &arr, int k) {
        // CodeGenius
        int N=arr.size();
        int police=0,thief=0;
        while(police<N && arr[police]!='P') police++;
        while(thief<N && arr[thief]!='T') thief++;
        int count=0;
        while(police < N && thief<N){
            if(abs(police-thief)<=k){
                count++;
                police++;
                thief++;
            }
            else if(police<N && police<thief) police++;
            else if(thief<N && thief < police) thief++;
            while(police<N && arr[police]!='P') police++;
            while(thief<N && arr[thief]!='T') thief++;
        }
        return count;
        
    }
};
//JAVA CODE
class Solution {
    public int catchThieves(char[] arr, int k) {
        int n = arr.length;
        int i = 0, j = 0;
        int count = 0;
        while (i < n && j < n) {
            while (i < n && arr[i] != 'P') i++;
            while (j < n && arr[j] != 'T') j++;
            if (i < n && j < n && Math.abs(i - j) <= k) {
                count++;
                j++;
                i++;          //when police catch one thief then move police and thief
            }
            else if (j < n && j < i) {
                j++;
            }
            else if (i < n && i < j) {
                i++;
            }
        }
        return count;
    }
}
