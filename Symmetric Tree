//C++ CODE
class Solution {
  public: 
    bool solve(Node* left, Node* right){
        if(left==NULL || right==NULL) return left==right;
        if(left->data != right->data) return false;
        return solve(left->left,right->right) && solve(left->right,right->left);
    }
    bool isSymmetric(Node* root) {
        // CodeGenius
        Node* left=root->left;
        Node* right=root->right;
        return solve(left,right);
        
    }
};
//JAVA CODE
class Solution {
    boolean f(Node n1, Node n2){
        if(n1==null && n2==null)return true;
        if(n1==null || n2==null)return false;
        
        if(f(n1.left,n2.right)==false)return false;
        if(f(n1.right,n2.left)==false)return false;
        
        if(n1.data!=n2.data)return false;
        if(n1.data!=n2.data)return false;
        return true;
    }
    public boolean isSymmetric(Node root) {
        return f(root,root);
    }
}
